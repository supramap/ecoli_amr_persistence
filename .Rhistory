library(jsonlite)
library(stringr)
library(dplyr)
library(tidyr)
library(arules)
## Generate New Extract from the NcBI Database
#json.stream <- fromJSON("https://www.ncbi.nlm.nih.gov/pathogens/ngram?start=0&limit=100000&q=%5Bdisplay()%2Chist(geo_loc_name%2Cisolation_source%2Ccollected_by%2Chost%2Cproperty%2Ctarget_creation_date)%5D.from(pathogen).usingschema(%2Fschema%2Fpathogen).matching(status%3D%3D%5B%22current%22%5D+and+q%3D%3D%22taxgroup_name%253A%2522E.coli%2520and%2520Shigella%2522%22).sort(target_creation_date%2Cdesc)&_search=false&rows=20&page=1&sidx=target_creation_date&sord=desc)")
#saveRDS(json.stream, file = "json.stream.RDS")
## Read in Data
json.stream <- readRDS("e.coli.RDS")
getwd()
data <- read.csv("Downloads/AMR_FunctionalMechanisms.csv")
setwd("~/Documents/ecoli_amr_persistence")
library(dplyr)
data <- read.csv("Downloads/AMR_FunctionalMechanisms.csv")
data <- read.csv("AMR_FunctionalMechanisms.csv")
View(data)
######################
## GC/SS by Type
GCSSbyType <- data %>% group_by(GC.SS, Type, .drop = FALSE) %>% tally()
View(GCSSbyType)
gc <- GCSSbyType %>% filter(GC.SS == "GC")
ss <- GCSSbyType %>% filter(GC.SS == "SS")
GCSSbyType_wt <- wilcox.test(gc$n,
ss$n,
alternative = "two.sided",
paired = TRUE)
View(GCSSbyType_wt)
View(gc)
View(ss)
View(GCSSbyType_wt)
p.adjust(GCSSbyType_wt$p.value,
method = "bonferroni",
n = nrow(gc))
######################
## GC/SS by Resistance Mechanism
GCSSbyRM <- data %>% group_by(GC.SS, Resistance.Mechanism, .drop = FALSE) %>% tally()
gc <- GCSSbyRM %>% filter(GC.SS == "GC")
ss <- GCSSbyRM %>% filter(GC.SS == "SS")
View(GCSSbyRM)
GCSSbyRM_wt <- wilcox.test(gc$n,
ss$n,
alternative = "two.sided",
paired = TRUE)
View(GCSSbyRM_wt)
View(GCSSbyRM)
######################
## GC/SS by Type
GCSSbyType <- data %>% group_by(GC.SS, Type, .drop = FALSE) %>% tally()
GCSSbyType$Pct <- GCSSbyType$n/sum(GCSSbyType$n)
View(GCSSbyType)
######################
## GC/SS by Type
GCSSbyType <- data %>% group_by(GC.SS, Type, .drop = FALSE) %>% tally()
gc <- GCSSbyType %>% filter(GC.SS == "GC")
gc$pct <- gc$n/sum(gc$n)
ss <- GCSSbyType %>% filter(GC.SS == "SS")
ss$pct <- ss$n/sum(ss$n)
View(ss)
GCSSbyType_wt <- wilcox.test(gc$pct,
ss$pct,
alternative = "two.sided",
paired = TRUE)
View(GCSSbyType_wt)
View(ss)
View(gc)
View(ss)
GCSSbyType_ks <- ks.test(gc$pct,
ss$pct,
alternative = "two.sided")
View(GCSSbyType_ks)
GCSSbyType_ks <- ks.test(gc$n,
ss$n,
alternative = "two.sided")
View(GCSSbyType_ks)
GCSSbyType_ks <- ks.test(gc$n,
ss$n,
alternative = "two.sided",
exact = TRUE)
View(GCSSbyType_ks)
View(GCSSbyType_wt)
GCSSbyType_wt <- wilcox.test(gc$n,
ss$n,
alternative = "two.sided",
paired = TRUE)
View(GCSSbyType_wt)
GCSSbyType_ks <- ks.test(gc$n,
ss$n,
alternative = "two.sided",
exact = TRUE)
######################
## GC/SS by Resistance Mechanism
GCSSbyRM <- data %>% group_by(GC.SS, Resistance.Mechanism, .drop = FALSE) %>% tally()
gc <- GCSSbyRM %>% filter(GC.SS == "GC")
gc$pct <- gc$n/sum(gc$n)
ss <- GCSSbyRM %>% filter(GC.SS == "SS")
ss$pct <- ss$n/sum(ss$n)
GCSSbyRM_ks <- ks.test(gc$pct,
ss$pct,
alternative = "two.sided",
exact = TRUE)
View(GCSSbyRM_ks)
View(GCSSbyRM)
View(data)
View(GCSSbyType_ks)
View(GCSSbyRM_ks)
library(dplyr)
data <- read.csv("AMR_FunctionalMechanisms.csv")
######################
## GC/SS by Type
GCSSbyType <- data %>% group_by(GC.SS, Type, .drop = FALSE) %>% tally()
gc <- GCSSbyType %>% filter(GC.SS == "GC")
gc$pct <- gc$n/sum(gc$n)
ss <- GCSSbyType %>% filter(GC.SS == "SS")
ss$pct <- ss$n/sum(ss$n)
GCSSbyType_ks <- ks.test(gc$n,
ss$n,
alternative = "two.sided",
exact = TRUE)
View(GCSSbyType_ks)
######################
## GC/SS by Resistance Mechanism
GCSSbyRM <- data %>% group_by(GC.SS, Resistance.Mechanism, .drop = FALSE) %>% tally()
gc <- GCSSbyRM %>% filter(GC.SS == "GC")
gc$pct <- gc$n/sum(gc$n)
ss <- GCSSbyRM %>% filter(GC.SS == "SS")
ss$pct <- ss$n/sum(ss$n)
GCSSbyRM_ks <- ks.test(gc$pct,
ss$pct,
alternative = "two.sided",
exact = TRUE)
View(GCSSbyRM_ks)
GCSSbyGene_ks <- ks.test(gc$n,
ss$n,
alternative = "two.sided",
paired = TRUE)
View(GCSSbyGene_ks)
View(data)
data <- read.csv("../../Downloads/gainloss_counts.csv")
kmeans(data[,1:2], centers = 5)
kmeans(data[,1:2],
centers = 5,
iter.max = 10000)
View(data)
kmeans(data[,1:2],
centers = 6,
iter.max = 10000)
clust5 <- kmeans(data[,1:2],
centers = 5,
iter.max = 10000)
plot(clust5)
kmeans(data[,1:2],
centers = 2,
iter.max = 10000)
plot(clust5)
# Gain        Loss
# 1   74.567568   2.3243243   [II]  SS
# 2  246.264706  14.7352941   [FI]  GC
# 3  641.266667  54.8000000   [FI]  GC
# 4 1939.777778 407.1111111   [FF]  SS
# 5    6.624204   0.4267516   [IN]  GC
plot(clust5)
plot(clust5, data = data)
hist(clust5$cluster)
plot(data$Gain, data$Loss)
install.packages("cluster")
install.packages("fpc")
# Kmeans clustre analysis
clus <- kmeans(data[, -3], centers=5)
library(cluster)
library(fpc)
# Kmeans clustre analysis
clus <- kmeans(data[, -3], centers=5)
plotcluster(data, clus$cluster)
# Kmeans clustre analysis
fit <- kmeans(data[, 1:2], centers=5)
# Kmeans clustre analysis
fit <- kmeans(data[, 1:2], centers=5)
clusplot(data[,1:2],
fit$cluster,
color=TRUE,
share=TRUE,
labels = 2,
lines=0)
plotcluster(data[,1:2], fit$cluster)
clusplot(data[,1:2],
fit$cluster,
color=TRUE,
share=TRUE,
labels = 2,
lines=0)
plotcluster(data[,1:2], fit$cluster)
View(data[],1:2)
View(data[,1:2])
clusplot(data[,1:2],
fit$cluster,
color=TRUE,
share=TRUE,
labels = 2,
lines=0)
plotcluster(data[,1:2], fit$cluster)
data$cluster <- clust5$cluster
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss, color=’Center’)) +
geom_point(data=centers, aes(x=Gain,y=Loss, color=’Center’), size=52, alpha=.3, legend=FALSE)
###############
library(ggplot2)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss, color=’Center’)) +
geom_point(data=centers, aes(x=Gain,y=Loss, color=’Center’), size=52, alpha=.3, legend=FALSE)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster))
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point()
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color=’Center’))
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color=`Center`))
centers <- as.data.frame(clust5$centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color=`Center`))
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss, color=`Center`)) +
geom_point(data=centers, aes(x=Gain,y=Loss, color=’Center’), size=52, alpha=.3, legend=FALSE)
###############
library(ggplot2)
centers <- as.data.frame(clust5$centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss, color=`Center`)) +
geom_point(data=centers, aes(x=Gain,y=Loss, color=`Center`), size=52, alpha=.3, legend=FALSE)
View(centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss)) +
geom_point(data=centers, aes(x=Gain,y=Loss), size=52, alpha=.3, legend=FALSE)
centers <- as.data.frame(clust5$centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss)) +
geom_point(data=centers, aes(x=Gain,y=Loss), size=52, alpha=.3, legend=FALSE)
data <- read.csv("../../Downloads/gainloss_counts.csv")
clust5 <- kmeans(data[,1:2],
centers = 5,
iter.max = 10000)
data$cluster <- clust5$cluster
centers <- as.data.frame(clust5$centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster))
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss))
data <- read.csv("../../Downloads/gainloss_counts.csv")
clust5 <- kmeans(data[,1:2],
centers = 5,
iter.max = 10000)
data$cluster <- factor(clust5$cluster)
centers <- as.data.frame(clust5$centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss))
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point()
View(centers)
View(centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss)) +
geom_point(data=centers, aes(x=Gain,y=Loss), size=52, alpha=.3, legend=FALSE)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label="Genotype")) +
geom_point() +
geom_point(data=centers, aes(x=Gain,y=Loss)) +
geom_point(data=centers, aes(x=Gain,y=Loss), size=52, alpha=.3, legend=FALSE)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point()
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label="Genotype")) +
geom_point()
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype) +
geom_point() +
geom_label()
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype) +
geom_point() +
geom_label() +
ylim(0,2500)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype) +
geom_point() +
ylim(0,2500)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype) +
geom_point() +
geom_label() )
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype) +
geom_point() +
geom_label())
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
geom_label()
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
ylim(0,2500)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
geom_label() +
ylim(0,2500)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
#geom_label() +
ylim(0,2500)
install.packages("Gmedian")
############
library(Gmedian)
medclust <- kGmedian(data[,1:2],
ncenters = 5)
View(medclust)
medclust <- kGmedian(data[,1:2],
ncenters = 5)
data$cluster <- factor(medclust$cluster)
centers <- as.data.frame(medclust$centers)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
#geom_label() +
ylim(0,2500) +
geom_point(data=centers, aes(x=Gain,y=Loss)) +
geom_point(data=centers, aes(x=Gain,y=Loss), size=52, alpha=.3, legend=FALSE)
ggplot(data=data, aes(x=Gain, y=Loss, color=cluster)) +
geom_point() +
#geom_label() +
ylim(0,2500) +
geom_point(data=centers, aes(x=Gain,y=Loss)) +
geom_point(data=centers, aes(x=Gain,y=Loss), size=52, alpha=.3, legend=FALSE)
View(data)
View(medclust)
View(centers)
ggplot(data = data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
#geom_label() +
ylim(0,2500)
ggplot(data = data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
geom_label() +
ylim(0,2500) +
geom_point(data=centers, aes(x=Gain,y=Loss))
ggplot(data = data, aes(x=Gain, y=Loss, color=cluster, label=Genotype)) +
geom_point() +
geom_label() +
ylim(0,2500)
hist(data$cluster)
