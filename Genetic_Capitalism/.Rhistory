"Frequently")) %>%
mutate(losscluster,
losscluster = ifelse(losscluster == 1,
"Never",
ifelse(losscluster == 7,
"Infrequently",
"Frequently")))
View(lossclust)
lossclust[["classification"]]
p <- ggplot(data = data, aes(x=Gain,
y=Loss,
color=cluster,
label=Genotype)) +
geom_point() +
geom_label() +
#geom_vline(xintercept = 20) +
#geom_hline(yintercept = 17) +
ylim(0,2500)
ggplotly(p)
data <- data %>%
mutate(gaincluster,
gaincluster = ifelse(gaincluster == 1,
"Infrequently",
"Frequently")) %>%
mutate(losscluster,
losscluster = ifelse(losscluster == 1,
"Never",
ifelse(losscluster == 7,
"Infrequently",
"Frequently")))
data$cluster <- paste0("G: ",
data$gaincluster,
" | L: "
, data$losscluster)
p <- ggplot(data = data, aes(x=Gain,
y=Loss,
color=cluster,
label=Genotype)) +
geom_point() +
geom_label() +
#geom_vline(xintercept = 20) +
#geom_hline(yintercept = 17) +
ylim(0,2500)
ggplotly(p)
## Read in Data
data <- read.csv("gainloss_counts.csv")
data$pctdiff <- abs(data$Gain-data$Loss)/((data$Gain+data$Loss)/2)
## Separate Clusters
set.seed(1337)
gainclust <- Mclust(data[,1])
data$gaincluster <- factor(gainclust$classification)
lossclust <- Mclust(data[,2])
data$losscluster <- factor(lossclust$classification)
data <- data %>%
mutate(gaincluster,
gaincluster = ifelse(gaincluster == 1,
"Infrequently",
"Frequently")) %>%
mutate(losscluster,
losscluster = ifelse(losscluster == 1,
"Never",
ifelse(losscluster == 7,
"Infrequently",
"Frequently")))
data$cluster <- paste0("G: ",
data$gaincluster,
" | L: "
, data$losscluster)
l
l
lp <- ggplot(data = data,
aes(x=log(Gain),
y=log(Loss),
color=cluster,
label=Genotype)) +
geom_point() +
geom_label()
ggplotly(lp)
View(data)
data$gaincluster <- factor(gainclust$classification)
lossclust <- Mclust(data[,2])
data$losscluster <- factor(lossclust$classification)
## Read in Data
data <- read.csv("gainloss_counts.csv")
data$pctdiff <- abs(data$Gain-data$Loss)/((data$Gain+data$Loss)/2)
## Separate Clusters
set.seed(1337)
gainclust <- Mclust(data[,1])
data$gaincluster <- factor(gainclust$classification)
lossclust <- Mclust(data[,2])
data$losscluster <- factor(lossclust$classification)
View(data)
data <- data %>%
mutate(gaincluster,
gaincluster = ifelse(gaincluster == 1,
"Infrequently",
"Frequently")) %>%
mutate(losscluster,
losscluster = ifelse(losscluster == 1,
"Never/Infrequently",
"Frequently"))
data$cluster <- paste0("G: ",
data$gaincluster,
" | L: "
, data$losscluster)
## Define GC, SS, and TBD Groups
data$GC.SS <- "SS"
data$GC.SS[data$cluster == "G: Frequently | L: Never/Infrequently"] <- "GC"
data$GC.SS[data$cluster == "G: Infrequently | L: Never/Infrequently"] <- "TBD"
View(data)
p <- ggplot(data = data, aes(x=Gain,
y=Loss,
color=GC.SS,
label=Genotype)) +
geom_point() +
geom_label() +
#geom_vline(xintercept = 20) +
#geom_hline(yintercept = 17) +
ylim(0,2500)
ggplotly(p)
lp <- ggplot(data = data,
aes(x=log(Gain),
y=log(Loss),
color=GC.SS,
label=Genotype)) +
geom_point() +
geom_label()
ggplotly(lp)
counts <- data %>% group_by(GC.SS) %>% tally()
View(counts)
## Read in Data
data <- read.csv("gainloss_counts.csv")
data$pctdiff <- abs(data$Gain-data$Loss)/((data$Gain+data$Loss)/2)
library(mclust)
## Separate Clusters
set.seed(1337)
gainclust <- Mclust(data[,1])
data$gaincluster <- factor(gainclust$classification)
lossclust <- Mclust(data[,2])
data$losscluster <- factor(lossclust$classification)
data <- data %>%
mutate(gaincluster,
gaincluster = ifelse(gaincluster == 1,
"Infrequently",
"Frequently")) %>%
mutate(losscluster,
losscluster = ifelse(losscluster == 1,
"Infrequently",
"Frequently"))
data$cluster <- paste0("G: ",
data$gaincluster,
" | L: "
, data$losscluster)
## Define GC, SS, and TBD Groups
data$GC.SS <- "SS"
data$GC.SS[data$cluster == "G: Frequently | L: Infrequently"] <- "GC"
data$GC.SS[data$cluster == "G: Infrequently | L: Infrequently"] <- "TBD"
counts <- data %>% group_by(GC.SS) %>% tally()
View(counts)
write.csv(data, "clusters.csv")
data <- read.csv("AMR_FunctionalMechanisms.csv")
newgcss <- read.csv("clusters.csv")
data$GC.SS <- newgcss$GC.SS
######################
## GC/SS by Type
GCSSbyType <- data %>% group_by(GC.SS, Type, .drop = FALSE) %>% tally()
gc <- GCSSbyType %>% filter(GC.SS == "GC")
gc$pct <- gc$n/sum(gc$n)
ss <- GCSSbyType %>% filter(GC.SS == "SS")
ss$pct <- ss$n/sum(ss$n)
View(GCSSbyType)
GCSSbyType$n
paste0(GCSSbyType$n, sep=", ")
paste0(GCSSbyType$n, collapse = ",")
GCSSbyType_ft <- fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
## Bonferroni Correction
p.adjust(GCSSbyType_ft$p.value,
method = "bonferroni",
n = 3)
0.05/3
0.1/3
## Fisher Test
GCSSbyType_ft <- fisher.test(gc$n,
ss$n,
alternative = "two.sided")
View(GCSSbyType_ft)
gc$n
ss$n
GCSSbyType_ft <- fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3),
2,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
164/409
16/409
229/409
4/409
36/409
49/409
274/409
18/409
28/409
0.004*409
0.056*409
.
GCSSbyType_ft <- fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
GCSSbyType_ft <- fisher.test(matrix(c(28,37,180,110,23,14,0,0,3,10,0,3),
2,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
GCSSbyType_ft <- fisher.test(matrix(c(4,36,46,264,18,25,0,0,3,10,0,3),
2,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
GCSSbyType_ft <- fisher.test(matrix(c(4,36,45,254,18,23,0,0,4,20,0,5),
2,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
## Throw AWAY
GCSSbyType_ft <- fisher.test(matrix(c(3,7,15,65,6,8,0,0,4,20,0,5,1,29,30,189,12,15),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
GCSSbyType_ft <- fisher.test(matrix(c(3,7,15,65,6,8,0,0,4,20,0,5),
2,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
GCSSbyType_ft <- fisher.test(matrix(c(4,36,45,254,18,23,0,0,4,20,0,5),
2,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = T)
View(GCSSbyType_ft)
p <- ggplot(data, aes(Type, fill = GC.SS)) +
geom_bar(position="dodge") +
scale_fill_npg()
ggplotly(p)
View(counts)
View(data)
View(data)
p <- ggplot(data, aes(Type, fill = GC.SS)) +
geom_bar(aes(y = Count/sum(Count)), position="dodge") +
scale_fill_npg()
ggplotly(p)
p <- ggplot(data, aes(Type, y = Count/sum(Count),  fill = GC.SS)) +
geom_bar(position="dodge") +
scale_fill_npg()
ggplotly(p)
104/164
10.16
10/16
160/229
fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
simulate.p.value = TRUE,
hybrid = TRUE)
GCSSbyType_ft <- fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
B = 100000,
simulate.p.value = TRUE,
hybrid = TRUE)
View(GCSSbyType_ft)
GCSSbyType_ft <- fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
B = 10000000,
simulate.p.value = TRUE,
hybrid = TRUE)
GCSSbyType_ft <- fisher.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=T,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))),
B = 100000,
simulate.p.value = TRUE,
hybrid = TRUE)
View(GCSSbyType_ft)
p <- ggplot(data, aes(Type,  fill = GC.SS)) +
geom_bar(position="dodge") +
scale_fill_npg()
ggplotly(p)
Barnard(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=TRUE,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))))
source_https("https://raw.github.com/talgalili/R-code-snippets/master/Barnard.R")
install.packages("Barnard")
library(Bernard)
library(Barnard)
Barnard(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=TRUE,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))))
barnard.test(matrix(c(3,11,20,104,12,14,0,0,3,10,0,3,1,25,26,160,6,11),
3,
6,
byrow=TRUE,
dimnames = list(classification=c("GC",
"SS",
"TBD"),
mechanism=c("unknown",
"alteration",
"efflux",
"inactiviation",
"protection",
"replacement"))))
View(data)
View(GCSSbyType)
View(data)
## Read in Data
data <- read.csv("gainloss_counts.csv")
View(data)
gl <- read.csv("gainloss_counts.csv")
rm <- read.csv("AMR_FunctionalMechanisms.csv")
View(gl)
View(rm)
rm$Gain <- gl$Gain
rm$Loss <- gl$Loss
View(rm)
grouping <- rm %>%
group_by(Type) %>%
mutate(Gains = sum(Gain),
Losses = sum(Loss))
View(grouping)
grouping <- rm %>%
select(c(Type, Gain, Loss))
View(grouping)
grouping <- rm %>%
group_by(Type) %>%
mutate(Gains = sum(Gain),
Losses = sum(Loss))
View(grouping)
grouping <- rm %>%
group_by(Type) %>%
mutate(Gains = sum(Gain),
Losses = sum(Loss)) %>%
select(c(Type, Gains, Losses)) %>%
unique()
View(grouping)
p <- ggplot(rm, aes(Gain, fill = Type)) +
geom_bar(position="dodge") +
scale_fill_npg()
ggplotly(p)
p <- ggplot(rm, aes(x = Gain, fill = Type)) +
geom_bar(position="dodge") +
scale_fill_npg()
ggplotly(p)
p <- ggplot(rm, aes(x = Gain, fill = Type)) +
geom_histogram(binwidth=1) +
scale_fill_npg()
ggplotly(p)
write.csv(rm, "gainloss_withRM.csv")
View(rm)
cl <- read.csv("clusters.csv")
View(cl)
View(cl)
View(rm)
View(cl)
